# cloud-config
# vim: syntax=yaml
---

write_files:
  - path: /etc/openvpn/server/primary.conf
    permissions: '0600'
    owner: root:root
    content: |
      #################################################
      # This file was created by cloud-init at boot.  #
      #                                               #
      # Comments are preceded with '#' or ';'         #
      #################################################

      # Which local IP address should OpenVPN listen on? (optional)
      ;local a.b.c.d
      port 1194
      proto udp
      dev tun

      # SSL/TLS root certificate (ca), certificate (cert), and private key
      # (key).  Each client and the server must have their own cert and key
      # file.  The server and all clients will use the same ca file.

      capath certs
      cert server.crt
      key server.key  # This file should be kept secret
      dh dh4096.pem

      topology subnet

      # Configure server mode and supply a VPN subnet for OpenVPN to draw client
      # addresses from. The server will take 10.8.0.1 for itself, the rest will
      # be made available to clients. Each client will be able to reach the
      # server on 10.8.0.1.
      server ${client_network}

      # Maintain a record of client <-> virtual IP address associations in this
      # file.  If OpenVPN goes down or is restarted, reconnecting clients can be
      # assigned the same virtual IP address from the pool that was previously
      # assigned.
      ifconfig-pool-persist ipp.txt

      # Push routes to the client to allow it to reach other private subnets
      # behind the server.  Remember that these private subnets will also need
      # to know to route the OpenVPN client address pool
      # (10.8.0.0/255.255.255.0) back to the OpenVPN server.
      %{ for network_netmask in private_networks }
      push "route ${network_netmask}"
      %{ endfor }

      # Push DNS server and search path to clients
      push "dhcp-option DNS ${client_dns_server}"
      push "dhcp-option DOMAIN ${client_dns_search_domain}"

      # The keepalive directive causes ping-like messages to be sent back and
      # forth over the link so that each side knows when the other side has gone
      # down. Ping every 10 seconds, assume that remote peer is down if no ping
      # received during a 120 second time period.
      keepalive 10 120

      # The inactivity directive causes OpenVPN to exit after n seconds of
      # inactivity on the TUN/TAP device. The time length of inactivity is
      # measured since the last incoming or outgoing tunnel packet. The default
      # value is 0 seconds, which disables this feature.  If the optional bytes
      # parameter is included, exit if less than bytes of combined in/out
      # traffic are produced on the tun/tap device in n seconds. In any case,
      # OpenVPN’s internal ping packets (which are just keepalives) and TLS
      # control packets are not considered “activity”, nor are they counted as
      # traffic, as they are used internally by OpenVPN and are not an
      # indication of actual user activity.
      push "inactive 3600"

      # For extra security beyond that provided by SSL/TLS, create an "HMAC
      # firewall" to help block DoS attacks and UDP port flooding.
      #
      # Generate with:
      #   openvpn --genkey --secret tlscrypt.key
      #
      # The server and each client must have a copy of this key. The second
      # parameter should be '0' on the server and '1' on the clients.
      tls-crypt tlscrypt.key # This file is secret

      # Select a cryptographic cipher. This config item must be copied to the
      # client config file as well. Note that v2.4 client/server will
      # automatically negotiate AES-256-GCM in TLS mode. See also the ncp-cipher
      # option in the manpage
      cipher AES-256-CBC

      # Enable compression on the VPN link and push the option to the client
      # (v2.4+ only, for earlier versions see below)
      compress lz4-v2
      push "compress lz4-v2"

      # The maximum number of concurrently connected
      # clients we want to allow.
      ;max-clients 100

      # The persist options will try to avoid accessing certain resources on
      # restart that may no longer be accessible because of the privilege
      # downgrade.
      persist-key
      persist-tun

      # Output a short status file showing current connections, truncated and
      # rewritten every minute.
      status openvpn-status.log

      # Set the appropriate level of log file verbosity.
      #
      # 0 is silent, except for fatal errors
      # 4 is reasonable for general usage
      # 5 and 6 can help to debug connection problems
      # 9 is extremely verbose
      verb 3

      # Silence repeating messages.  At most 20 sequential messages of the same
      # message category will be output to the log.
      ;mute 20

      # Notify the client that when the server restarts so it can automatically
      # reconnect.
      explicit-exit-notify 1

      # Run command cmd to verify the X509 name of a pending TLS connection that
      # has otherwise passed all other tests of certification.  This is used
      # to verify that a user has provided an authorized PIV certificate:
      tls-verify verify-cn.py

      # This directive offers policy-level control over OpenVPN's usage of
      # external programs and scripts. Lower level values are more restrictive,
      # higher values are more permissive. Settings for level:
      # 0 -- Strictly no calling of external programs.
      # 1 -- (Default) Only call built-in executables such as ifconfig, ip,
      #      route, or netsh.
      # 2 -- Allow calling of built-in executables and user-defined scripts.
      # 3 -- Allow passwords to be passed to scripts via environmental
      #      variables (potentially unsafe).
      script-security 2
